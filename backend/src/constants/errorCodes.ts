/**
 * * üö® Error Codes
 * ? Centralized constants for error handling across the application.
 * ? Helps avoid "magic strings" and ensures consistency in error responses.
 * 
 * ! Always reference these constants instead of hardcoding error strings
 */
export const ERROR_CODES = {
    ALREADY_EXISTS: "ALREADY_EXISTS",               // ‚ö†Ô∏è Resource already exists (e.g., duplicate email)
    AUTHENTICATION_ERROR: "AUTHENTICATION_ERROR",   // üîë Invalid login/authentication failure
    FORBIDDEN: "FORBIDDEN",                         // üö´ User does not have permission to access resource
    INTERNAL_SERVER_ERROR: "INTERNAL_SERVER_ERROR", // üí• Unexpected server error
    NOT_FOUND: "NOT_FOUND",                         // üîç Requested resource not found
    UNAUTHORIZED: "UNAUTHORIZED",                   // üîí Missing or invalid authentication
    VALIDATION_ERROR: "VALIDATION_ERROR",           // ‚ùå Input validation failed
} as const;

/**
 * * üîñ ErrorCode Type
 * ? Creates a union type of all error code string values.
 * Example: "ALREADY_EXISTS" | "AUTHENTICATION_ERROR" | ...
 * 
 * ‚úÖ Ensures type safety when assigning or checking error codes.
 */
export type ErrorCode = (typeof ERROR_CODES)[keyof typeof ERROR_CODES];
